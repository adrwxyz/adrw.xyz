{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-tech-2021-04-09-synology-ssl-certificate-renewal-mdx-6bd8380c9a9c0e33e2aa.js","mappings":"gOAMA,MAFmBA,IAAA,IAAC,KAAEC,GAAmBD,EAAA,OAAK,IAAI,EC4BlD,MACME,EADK,CAAC,OAAD,aACOC,KAAKC,GAAC,0BAA+BA,EAAC,IAAIA,EAAC,SAsC7D,MApCwEJ,IAAA,IAAGK,MAAM,KAAEJ,GAAM,SAAEK,GAAUN,EAAA,OACnGO,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAACE,EAAAA,GAAO,CAACC,GAAG,KAAKC,QAAQ,aACtBV,EAAKW,QAERL,EAAAA,EAAAA,GAAA,KAAGM,GAAI,CAAEC,MAAM,YAAcC,GAAI,EAAGC,EAAG,CAAEF,MAAM,aAAgBG,SAAU,CAAC,EAAG,EAAG,MAC9EV,EAAAA,EAAAA,GAAA,YAAON,EAAKiB,MACXjB,EAAKkB,OACJZ,EAAAA,EAAAA,GAACa,EAAAA,SAAc,YAEbb,EAAAA,EAAAA,GAACc,EAAAA,EAAQ,CAACF,KAAMlB,EAAKkB,QAGxBlB,EAAKqB,YAAU,MACfrB,EAAKqB,aAAcf,EAAAA,EAAAA,GAAA,YAAON,EAAKqB,WAAW,eAE7Cf,EAAAA,EAAAA,GAAA,WACEM,GAAI,CACFU,GAAI,EACJ,6BAA8B,CAC5BA,GAAI,CAAC,EAAG,EAAG,GACXC,aAAa,MACbC,UAAWvB,EAAOwB,KAAK,MACvB,2BAA4B,CAC1BF,aAAa,QAGjBb,QAAQ,mBAGTL,IAEHC,EAAAA,EAAAA,GAACoB,EAAU,CAAC1B,KAAMA,IACX,EAKJ,MAAM2B,EAA4BC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,IAAG3B,MAAM,KAAEJ,IAAQ4B,EAAA,OAC1DtB,EAAAA,EAAAA,GAAC0B,EAAAA,EAAG,CACFrB,MAAOX,EAAKW,MACZsB,YAAajC,EAAKiC,YAAcjC,EAAKiC,YAAcjC,EAAKkC,QACxDC,MAAOnC,EAAKoC,OAAoB,QAAdP,EAAG7B,EAAKoC,cAAM,IAAAP,GAAiB,QAAjBC,EAAXD,EAAaQ,uBAAe,IAAAP,GAAQ,QAARC,EAA5BD,EAA8BQ,cAAM,IAAAP,OAAzB,EAAXA,EAAsCQ,SAAMC,EACjEC,SAAUzC,EAAK0C,KACfC,aAAc3C,EAAK2C,cACnB,EC5EW,SAASC,EAAmB7C,GAAwC,OAAlC8C,GAA+B9C,EAC9E,OAAOoB,EAAAA,cAAC2B,EAASD,EACnB,C,wHCHA,SAASE,EAAkBF,GACzB,MAAMG,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJrC,EAAG,IACHsC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOrC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,oEAAqE,KAAMhC,EAAAA,cAAoB6B,EAAYI,GAAI,KAAM,wCAAyC,KAAMjC,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,gKAAiKhC,EAAAA,cAAoB6B,EAAYjC,EAAG,CACze0C,KAAM,oCACL,gBAAiB,kCAAmC,KAAMtC,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,wMAAyM,KAAMhC,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,+VAAgW,KAAMhC,EAAAA,cAAoB6B,EAAYK,IAAK,KAAMlC,EAAAA,cAAoB6B,EAAYM,KAAM,KAAM,kXAAmX,KAAMnC,EAAAA,cAAoB6B,EAAYI,GAAI,KAAM,sCAAuC,KAAMjC,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,gOAAiO,KAAMhC,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,4cAA6c,KAAMhC,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,yIAA0I,KAAMhC,EAAAA,cAAoB6B,EAAYG,EAAG,KAAM,qFAAsFhC,EAAAA,cAAoB6B,EAAYM,KAAM,KAAM,WAAY,aAAcnC,EAAAA,cAAoB6B,EAAYjC,EAAG,CACt5E0C,KAAM,gDACLtC,EAAAA,cAAoB6B,EAAYM,KAAM,KAAM,eAAgB,iCAAkCnC,EAAAA,cAAoB6B,EAAYM,KAAM,KAAM,cAAe,oHAC9J,CAKA,MAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOG,EAAYxC,EAAAA,cAAoBwC,EAAWd,EAAO1B,EAAAA,cAAoB4B,EAAmBF,IAAUE,EAAkBF,EAC9H,E,UChBe,SAASe,EAAiBf,GACvC,OAAO1B,EAAAA,cAAoB0C,EAAAA,EAAehB,EAAO1B,EAAAA,cAAoB2C,EAAqBjB,GAC5F,CAHAgB,EAAAA,C,yDCiEA,IAvDY9D,IAOK,IAPJ,MACXY,EAAK,GAAK,YACVsB,EAAW,GAAK,SAChBQ,EAAQ,GAAK,MACbN,EAAK,GAAK,SACV9B,EAAW,KAAI,aACfsC,EAAY,IACH5C,EACT,MAAMgE,GAAOC,EAAAA,EAAAA,MAEP,UACJC,EACAC,aAAcC,EAAY,QAC1BC,EACAC,gBAAiBC,EACjBC,UAAWC,EAAY,OACvBC,EAAM,aACNC,GACEX,EAEEY,EAAM,CACVhE,MAAOA,EAAWA,EAAK,MAAMsD,EAAcE,EAC3ClC,YAAaA,GAAeqC,EAC5BM,IAAI,GAAIR,GAAU3B,GAAQ,IAC1BN,MAAM,GAAIiC,GAAUjC,GAASqC,IAE/B,OACErD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAM0D,KAAMH,IACZvD,EAAAA,cAAA,aAAQwD,EAAIhE,OACZQ,EAAAA,cAAA,QAAM2D,KAAK,cAAcC,QAASJ,EAAI1C,cACtCd,EAAAA,cAAA,QAAM2D,KAAK,QAAQC,QAASJ,EAAIxC,QAChChB,EAAAA,cAAA,QAAM6D,SAAS,WAAWD,QAASJ,EAAIhE,QACvCQ,EAAAA,cAAA,QAAM6D,SAAS,SAASD,QAASJ,EAAIC,MACrCzD,EAAAA,cAAA,QAAM6D,SAAS,iBAAiBD,QAASJ,EAAI1C,cAC7Cd,EAAAA,cAAA,QAAM6D,SAAS,WAAWD,QAASJ,EAAIxC,QACvChB,EAAAA,cAAA,QAAM6D,SAAS,UAAUD,QAAQ,YACjC5D,EAAAA,cAAA,QAAM6D,SAAS,eAAeD,QAASJ,EAAI1C,cAC3Cd,EAAAA,cAAA,QAAM2D,KAAK,eAAeC,QAAQ,wBAClC5D,EAAAA,cAAA,QAAM2D,KAAK,gBAAgBC,QAASJ,EAAIhE,QACxCQ,EAAAA,cAAA,QAAM2D,KAAK,cAAcC,QAASJ,EAAIC,MACtCzD,EAAAA,cAAA,QAAM2D,KAAK,sBAAsBC,QAASJ,EAAI1C,cAC9Cd,EAAAA,cAAA,QAAM2D,KAAK,gBAAgBC,QAASJ,EAAIxC,QACxChB,EAAAA,cAAA,QAAM2D,KAAK,oBAAoBC,QAASJ,EAAI1C,cAC5Cd,EAAAA,cAAA,QAAM2D,KAAK,kBAAkBC,QAASN,IACtCtD,EAAAA,cAAA,QAAM2D,KAAK,eAAeC,QAAQ,wCAClC5D,EAAAA,cAAA,QAAM8D,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQ1B,MAAM2B,EAAAA,EAAAA,YAAW,wBACjEjE,EAAAA,cAAA,QAAM8D,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQ1B,MAAM2B,EAAAA,EAAAA,YAAW,wBACjEjE,EAAAA,cAAA,QAAM8D,IAAI,mBAAmBE,MAAM,UAAU1B,MAAM2B,EAAAA,EAAAA,YAAW,2BAC7DzC,EAAexB,EAAAA,cAAA,QAAM8D,IAAI,YAAYxB,KAAMd,IAAmB,KAC9DtC,EACA,C,4ECjCP,IAjBiBN,IAA0B,IAAzB,KAAEmB,GAAiBnB,EACnC,MAAM,SAAEsF,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACEjF,EAAAA,EAAAA,GAACa,EAAAA,SAAc,KACZD,EAAKhB,KAAI,CAACsF,EAAKC,KACdnF,EAAAA,EAAAA,GAACa,EAAAA,SAAc,CAACuE,IAAKF,EAAI9C,QACpB+C,GAAC,MACJnF,EAAAA,EAAAA,GAACqF,EAAAA,KAAI,CAAC/E,GAAKgF,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAU9E,EAAG,EAAGgF,IAAIC,EAAAA,EAAAA,GAAe,IAAIV,EAAQ,IAAID,EAAQ,IAAIG,EAAI9C,OACvF8C,EAAIV,SAII,C","sources":["webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://adrw.xyz/./content/posts/tech/2021-04-09-synology-ssl-certificate-renewal.mdx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"On the woes of renewing custom domain Synology SSL Certificates.\"), \"\\n\", React.createElement(_components.h2, null, \"Rebind Ports 80 and 443 from Traefik\"), \"\\n\", React.createElement(_components.p, null, \"To make larger reverse proxy rule management easier, I switched from using Synology's built in GUI reverse proxy to a Traefik instance running in Docker. In \", React.createElement(_components.a, {\n    href: \"./traefik-reverse-proxy-synology\"\n  }, \"another post\"), \" I outlined how I set that up.\"), \"\\n\", React.createElement(_components.p, null, \"One complexity was unbinding ports 80 and 443 from Synology DSM so that Traefik via Docker could bind to them and handle all reverse proxy routing. I found a great script online that managed that.\"), \"\\n\", React.createElement(_components.p, null, \"But in this case, to renew the DSM certificates which are what the Synology mobile apps for Photos, Surveillance...etc terminate SSL against, DSM needed to own 80 and 443. Reversing the script allowed me to restore from backup the factory default NGINX config, and on reboot Synology DSM owns 80 and 443 ports again, and can renew the certificate.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ cp /volume1/docker/services/traefik-reverse-proxy/nginx-backups/*.mustache /usr/syno/share/nginx/\\n$ nginx -s reload\\n# Potentially need to hard restart server\\n$ sudo netstat -tulpn | grep LISTEN | grep ':80 \\\\|:443 '\\n# Renew the certificate in DSM\\n# Re-run the unbind ports script to free 80/443\\n# Restart the server to go back to the Traefik reverse proxy\\n\")), \"\\n\", React.createElement(_components.h2, null, \"HTTP Autoupgrade to HTTPS Facepalm\"), \"\\n\", React.createElement(_components.p, null, \"Turns out an optimization in my router configuration to auto-upgrade HTTP requests to HTTPS became a head scratcher when the built in Synology Certificate Manager wouldn't renew a certificate for my home server services.\"), \"\\n\", React.createElement(_components.p, null, \"I had setup a redirect such that all traffic on port 80 (HTTP) to my router forwards to my home server port 4080 where my home server can reverse proxy to different services running in Docker containers on different ports. Thus, the Certificate Manager, which relies on access to port 80 and port 443, would fail since all of the requests to port 80 would end up going through my redirect to port 4080 and the reverse proxy rule which upgrades it to https.\"), \"\\n\", React.createElement(_components.p, null, \"Temporarily updating my router rule to forward requests on port 80 to Synology as port 80 allowed the Certificate Manager to succeed.\"), \"\\n\", React.createElement(_components.p, null, \"What revealed this to me was when I tried to renew the certificate manually using \", React.createElement(_components.code, null, \"certbot\"), \" and then \", React.createElement(_components.a, {\n    href: \"https://github.com/dehydrated-io/dehydrated/\"\n  }, React.createElement(_components.code, null, \"dehydrated\")), \" and realized that when I ran \", React.createElement(_components.code, null, \"dehydrated\"), \" on the Synology server, the logs showed that ACME verification over port 443 succeeded but over port 80 failed.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/adrw.xyz/adrw.xyz/content/posts/tech/2021-04-09-synology-ssl-certificate-renewal.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","_createMdxContent","_components","Object","assign","p","h2","pre","code","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","withPrefix","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes"],"sourceRoot":""}