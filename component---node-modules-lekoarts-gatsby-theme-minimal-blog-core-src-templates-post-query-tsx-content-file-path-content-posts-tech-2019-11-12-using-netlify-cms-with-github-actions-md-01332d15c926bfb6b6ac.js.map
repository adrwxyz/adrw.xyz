{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-tech-2019-11-12-using-netlify-cms-with-github-actions-md-01332d15c926bfb6b6ac.js","mappings":"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","sources":["webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://adrw.xyz/./content/posts/tech/2019-11-12-using-netlify-cms-with-github-actions.md","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Using Netlify CMS with Github Actions\"), \"\\n\", React.createElement(_components.p, null, \"After enjoying the full Netlify ecosystem for the past year, I've come up against their recent changes in build times for free accounts.\"), \"\\n\", React.createElement(_components.p, null, \"Given the recent progression of Github Actions to broader release, I figured I'd give it a shot to move builds back to Github but maintain support for Netlify CMS as a GUI for editing site content.\"), \"\\n\", React.createElement(_components.p, null, \"This ended up being quite the hassle.\"), \"\\n\", React.createElement(_components.p, null, \"So, I've documented the final fix below. \", React.createElement(_components.a, {\n    href: \"https://github.com/adrwxyz/adrw.xyz/commit/a35277bb6e3cf62c9a9125248201e68d9e5b37f6\"\n  }, \"Example commit\"), \".\"), \"\\n\", React.createElement(_components.h1, null, \"Github\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Add a file \", React.createElement(_components.code, null, \"CNAME\"), \" to your repo with your domain (ie. \", React.createElement(_components.code, null, \"adrw.xyz\"), \")\"), \"\\n\", React.createElement(_components.li, null, \"On master branch, create and push a \", React.createElement(_components.code, null, \"gh-pages\"), \" branch\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ gco -b gh-pages\\n$ git push --set-upstream origin gh-pages\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Turn on Github Pages for this branch in repo settings\"), \"\\n\", React.createElement(_components.li, null, \"Set it to your existing custom domain\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"DNS\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Update domain registrar (ie. Namecheap) with the following new DNS records to point at Github Pages instead of Netlify. Note, use subdomain instead of \", React.createElement(_components.code, null, \"@\"), \" and \", React.createElement(_components.code, null, \"www\"), \" below if it is a subdomain.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"A     @     185.199.108.153       TTL(Auto)\\nA     @     185.199.109.153       TTL(Auto)\\nA     @     185.199.110.153       TTL(Auto)\\nA     @     185.199.111.153       TTL(Auto)\\nCNAME www   username.github.io.   TTL(Auto)\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"static/admin/config.yml\"), \"\\n\", React.createElement(_components.p, null, \"Update the configuration of Netlify CMS in the repo.\"), \"\\n\", React.createElement(_components.h3, null, \"Before\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yml\"\n  }, \"backend:\\n  name: git-gateway\\n  branch: master\\n\")), \"\\n\", React.createElement(_components.h3, null, \"After\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yml\"\n  }, \"backend:\\n  name: github\\n  repo: adrw/cook\\n  site_domain: cook.alexanders.xyz\\n  branch: master\\n\")), \"\\n\", React.createElement(_components.h1, null, \"Netlify\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Turn off Netlify Identity (if used).\"), \"\\n\", React.createElement(_components.li, null, \"In \", React.createElement(_components.code, null, \"Deploys\"), \", stop auto-publishing to prevent the site instance from contributing to your monthly build minutes.\"), \"\\n\", React.createElement(_components.li, null, \"In \", React.createElement(_components.code, null, \"Settings/Build & Deploy\"), \", in \", React.createElement(_components.code, null, \"Deploy contexts\"), \", turn off deploy previews.\"), \"\\n\", React.createElement(_components.li, null, \"In \", React.createElement(_components.code, null, \"Settings/Access Control\"), \", add Github as an OAuth authentication provider. You'll need to set up a new OAuth app in Github settings to get the secret values. Use \", React.createElement(_components.code, null, \"https://api.netlify.com/auth/done\"), \" as the success url.\"), \"\\n\", React.createElement(_components.li, null, \"In \", React.createElement(_components.code, null, \"Settings/Domain management\"), \", add the value you used for \", React.createElement(_components.code, null, \"site_domain\"), \" in \", React.createElement(_components.code, null, \"static/admin/config.yml\"), \" as a custom domain. This will allow Netlify's redirect after auth to correctly redirect to the correct domain.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Resources\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.netlifycms.org/docs/authentication-backends/#external-oauth-clients\"\n  }, \"Netlify docs\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/52410225/gatsby-cms-failed-to-load-settings-from-netlify-identity\"\n  }, \"Stack Overflow\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://cnly.github.io/2018/04/14/just-3-steps-adding-netlify-cms-to-existing-github-pages-site-within-10-minutes.html\"\n  }, \"cnly.github.io\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://tylergaw.com/articles/netlify-cms-custom-oath-provider/\"\n  }, \"tylergaw.com\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/adrw.xyz/adrw.xyz/content/posts/tech/2019-11-12-using-netlify-cms-with-github-actions.md\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","_createMdxContent","_components","Object","assign","h1","p","ul","li","code","pre","h3","_provideComponents","components","href","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","withPrefix","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes"],"sourceRoot":""}