{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-songs-worship-christ-the-rock-md-8c9b9cc336b52e546b1f.js","mappings":"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","sources":["webpack://adrw.xyz/./content/posts/songs/worship/christ-the-rock.md","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.pre, null, React.createElement(_components.code, null, \"(Song is in 7/4 - a measure of 3/4 followed by 4/4)\\n\\nIntro:\\n| Am |\\n(Sustain single-note tonic on strings in high octave for a measure)\\n| Am  G   F   Am  -   -   - | (2x)\\n(piano plays chords)\\n\\n\\nVerse 1:\\n(Add bass strings)\\n   Am         G     F      Am  -   -   -\\nOn Christ the solid rock I stand\\n   Am     G      F        Am\\nNo double minded shifting sands\\n   Am         G      Dm       Am\\nOn Christ the rock I plant my feet\\n  Am       Em  F        Am\\nA firm founda - tion for me\\n\\n\\nVerse 2:\\n(Add 2-note string chords)\\n   Am         G      F        Am\\nOn Christ the rock I place my heart\\n    Am       G       F       Am\\nAnd trust in who You say You are\\n   Am    G           Dm       Am\\nNo circumstance that blows my way\\n     Am   Em       F     Am\\nWill ever move this solid place\\n\\n\\nChorus:\\n(Full strings)\\nAm -   G   C -  -  -\\n H\\n  - Songs(Worship)\\n--- o - ly\\nDm -   C   G  -  -  -\\n H\\n  - Songs(Worship)\\n--- o - ly (repeat)\\n\\n\\nVerse 3:\\n   Am         G     F      Am\\nOn Christ the solid rock I stand\\n   Am     G        F       Am\\nLeaving behind the fear of man\\n     Am         G       Dm    Am\\nWith Christ the truth I will agree\\n    Am    Em       F        Am\\nForsaking lies that come for me\\n\\n\\nVerse 4:\\n   Am         G      F      Am\\nOn Christ the rock I lay my dreams\\n     Am        G       F      Am\\nCome with your fire consuming me\\n     Am         G      Dm      Am\\nWith Christ the rock I make my plans\\nAm      Em       F    Am\\nPartner with Your purposes\\n\\n\\nBridge:\\n(4/4 - with \\\"Ho-\\\" on 4 and \\\"-ly\\\" on 1)\\n( C ) G  F   G Am\\n    Ho - ly, holy\\nG F   ( G )     G Am\\nHoly, (You are) holy (O God) (2x)\\n\\n\\nInstrumental:\\n(4/4 - follows Bridge progression)\\n| ( Am ) - - G |\\n| F - - G | Am - - G | (3x)\\n| F - - G | Am - - - |\\n\\n\\nOutro:\\n(piano only)\\n   Am         G     F      Am\\nOn Christ the solid rock I stand\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/adrw.xyz/adrw.xyz/content/posts/songs/worship/christ-the-rock.md\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_createMdxContent","props","_components","Object","assign","pre","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","Post","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","href","withPrefix","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes"],"sourceRoot":""}