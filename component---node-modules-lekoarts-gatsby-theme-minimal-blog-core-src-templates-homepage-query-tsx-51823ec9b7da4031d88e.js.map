{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-51823ec9b7da4031d88e.js","mappings":"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","sources":["webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://adrw.xyz/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://adrw.xyz/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://adrw.xyz/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://adrw.xyz/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.img, {\n    src: \"../../img/logos/h-300.png\",\n    alt: \"adrw.xyz\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Â Â Â Â \", React.createElement(_components.a, {\n    href: \"memento-mori\"\n  }, React.createElement(_components.em, null, \"memento mori...\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Title from \"@lekoarts/gatsby-theme-minimal-blog/src/components/title\"\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\nimport List from \"@lekoarts/gatsby-theme-minimal-blog/src/components/list\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\nimport { visuallyHidden } from \"@lekoarts/gatsby-theme-minimal-blog/src/styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  const pinnedPosts = [\n    {\n      slug: \"/projects/2020-11-04-meet-barber\",\n      title: \"Meet Barber ðŸ’ˆ: the best way to manage your Mustache\",\n      date: \"\",\n      excerpt: \"\",\n      description: \"\"\n    }\n  ]\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section\n        sx={{\n          mb: [5, 6, 7],\n          p: { fontSize: [1, 2, 3], mt: 2 },\n          variant: `section_hero`\n        }}\n      >\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>\n          Read all posts\n        </Link>\n      </Title>\n      <Listing posts={pinnedPosts} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","img","p","em","_provideComponents","components","React","src","alt","href","wrapper","MDXLayout","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","fontSize","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","slug","title","date","excerpt","description","List","Bottom","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","t","_t$styles","styles","name","post","showTags","Box","color","ItemTags","className","BlogListItem"],"sourceRoot":""}